// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  password  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  jobOpportunities JobOpportunity[]
  resumes          Resume[]
  resumeId         String?          @unique

  @@map("users")
}

model Resume {
  id     String @id @default(uuid())
  userId String @unique

  title       String?
  description String?

  photoUrl      String?
  colorHex      String  @default("#000000")
  borderStyle   String  @default("squircle")
  summary       String?
  firstName     String?
  lastName      String?
  jobTitle      String?
  phone         String?
  streetAddress String?
  location      String?
  city          String?
  country       String?
  github        String?
  linkedin      String?
  email         String?

  educations      Education[]
  workExperiences WorkExperience[]
  users           User?            @relation(fields: [userId], references: [id])
  skills          String[]
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt

  @@map("resumes")
}

model WorkExperience {
  id          String    @id @default(uuid())
  position    String?
  company     String?
  startDate   DateTime?
  endDate     DateTime?
  description String?

  resumeId String
  resume   Resume @relation(fields: [resumeId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("work_experiences")
}

model Education {
  id            String    @id @default(uuid())
  institution   String?
  qualification String?
  location String?
  startDate     DateTime?
  endDate       DateTime?
  grade   String?

  resumeId String
  resume   Resume @relation(fields: [resumeId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("educations")
}

model JobOpportunity {
  id               String   @id @default(uuid())
  title            String?
  location         String?
  company          String?
  datePosted       DateTime @default(now())
  jobType          String?
  workMode         String?
  salary           String?
  categories       String[]
  benefits         String?
  aboutThisJob     String?
  requirements     String?
  responsibilities String?

  userId    String?
  user      User?    @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("job_opportunities")
}
